// Code generated by MockGen. DO NOT EDIT.
// Source: internal/config/config.go

// Package mock_config is a generated GoMock package.
package mock_config

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	config "github.com/rohanchauhan02/sequence-service/internal/config"
)

// MockImmutableConfig is a mock of ImmutableConfig interface.
type MockImmutableConfig struct {
	ctrl     *gomock.Controller
	recorder *MockImmutableConfigMockRecorder
}

// MockImmutableConfigMockRecorder is the mock recorder for MockImmutableConfig.
type MockImmutableConfigMockRecorder struct {
	mock *MockImmutableConfig
}

// NewMockImmutableConfig creates a new mock instance.
func NewMockImmutableConfig(ctrl *gomock.Controller) *MockImmutableConfig {
	mock := &MockImmutableConfig{ctrl: ctrl}
	mock.recorder = &MockImmutableConfigMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockImmutableConfig) EXPECT() *MockImmutableConfigMockRecorder {
	return m.recorder
}

// GetDBConf mocks base method.
func (m *MockImmutableConfig) GetDBConf() config.DB {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDBConf")
	ret0, _ := ret[0].(config.DB)
	return ret0
}

// GetDBConf indicates an expected call of GetDBConf.
func (mr *MockImmutableConfigMockRecorder) GetDBConf() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDBConf", reflect.TypeOf((*MockImmutableConfig)(nil).GetDBConf))
}

// GetPort mocks base method.
func (m *MockImmutableConfig) GetPort() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPort")
	ret0, _ := ret[0].(string)
	return ret0
}

// GetPort indicates an expected call of GetPort.
func (mr *MockImmutableConfigMockRecorder) GetPort() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPort", reflect.TypeOf((*MockImmutableConfig)(nil).GetPort))
}
