// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/sequence": {
            "post": {
                "description": "Create a new email sequence with steps",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sequences"
                ],
                "summary": "Create a new email sequence",
                "parameters": [
                    {
                        "description": "Sequence details",
                        "name": "sequence",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateSequenceRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ResponsePattern"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.CreateSequenceResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponsePattern"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponsePattern"
                        }
                    }
                }
            }
        },
        "/sequence/{id}": {
            "get": {
                "description": "Retrieve details of a specific email sequence by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sequences"
                ],
                "summary": "Get sequence details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sequence ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ResponsePattern"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Sequence"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponsePattern"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponsePattern"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update tracking information for a specific email sequence",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sequences"
                ],
                "summary": "Update sequence tracking information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sequence ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tracking information to update",
                        "name": "tracking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateSequenceTrackingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ResponsePattern"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Sequence"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ResponsePattern"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error_message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponsePattern"
                        }
                    }
                }
            }
        },
        "/sequence/{id}/steps/{stepId}": {
            "put": {
                "description": "Update details of a specific step within an email sequence",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sequences"
                ],
                "summary": "Update a step in the sequence",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sequence ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Step ID",
                        "name": "stepId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Step details to update",
                        "name": "step",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateStepRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponsePattern"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponsePattern"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponsePattern"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a specific step from an email sequence",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sequences"
                ],
                "summary": "Delete a step from the sequence",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sequence ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Step ID",
                        "name": "stepId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/dto.ResponsePattern"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponsePattern"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/dto.ResponsePattern"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateSequenceRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "click_tracking_enabled": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "open_tracking_enabled": {
                    "type": "boolean"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CreateStepRequest"
                    }
                }
            }
        },
        "dto.CreateSequenceResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.CreateStepRequest": {
            "type": "object",
            "required": [
                "content",
                "step_order",
                "subject",
                "wait_days"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "minLength": 1
                },
                "step_order": {
                    "type": "integer",
                    "minimum": 0
                },
                "subject": {
                    "type": "string",
                    "minLength": 1
                },
                "wait_days": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "dto.ResponsePattern": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "error_message": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "meta": {},
                "request_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateSequenceTrackingRequest": {
            "type": "object",
            "properties": {
                "click_tracking_enabled": {
                    "type": "boolean"
                },
                "open_tracking_enabled": {
                    "type": "boolean"
                }
            }
        },
        "dto.UpdateStepRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "minLength": 1
                },
                "subject": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "models.Sequence": {
            "type": "object",
            "properties": {
                "click_tracking_enabled": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "open_tracking_enabled": {
                    "type": "boolean"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Step"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Step": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "sequence_id": {
                    "type": "string"
                },
                "step_order": {
                    "type": "integer"
                },
                "subject": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "wait_days": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
